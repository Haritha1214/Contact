{"version":3,"sources":["Components/AddContact.js","Action/index.js","Components/Contact.js","App.js","Reducers/index.js","index.js"],"names":["AddContact","history","useHistory","dispatch","useDispatch","useState","name","setName","phone","setPhone","className","onSubmit","e","preventDefault","push","createContact","type","placeholder","value","onChange","target","CREATE","EDIT","DELETE","CONTACTS","SELECT","CLEAR","DELETE_SELECTED","Contact","contact","selectAll","id","email","checked","to","onClick","payload","deleteUser","App","intialState","contacts","Phone","selectedContacts","contactReducer","state","action","map","filter","arr","values","val","store","combineReducers","createStore","ReactDOM","render","document","getElementById"],"mappings":"8KAqDeA,EAjDI,SAAbA,IACJ,IAAIC,EAAUC,cACRC,EAAWC,cACjB,EAAwBC,mBAAS,IAAjC,mBAAOC,EAAP,KAAaC,EAAb,KACA,EAA0BF,mBAAS,IAAnC,mBAAOG,EAAP,KAAcC,EAAd,KAaA,OACE,sBAAKC,UAAU,uBAAf,UACE,qBAAKA,UAAU,cAAf,2BACA,qBAAKA,UAAU,YAAf,SACE,uBAAMC,SAAU,SAACC,GAAD,OAfA,SAACA,GACrBA,EAAEC,iBAMFV,EAASH,KACTC,EAAQa,KAAK,KAOcC,CAAcH,IAArC,UACE,qBAAKF,UAAU,aAAf,SACE,uBACEM,KAAK,OACLN,UAAU,eACVO,YAAY,kBACZC,MAAOZ,EACPa,SAAU,SAACP,GAAD,OAAOL,EAAQK,EAAEQ,OAAOF,YAGtC,qBAAKR,UAAU,aAAf,SACE,uBACEM,KAAK,OACLN,UAAU,eACVO,YAAY,0BACZC,MAAOV,EACPW,SAAU,SAACP,GAAD,OAAOH,EAASG,EAAEQ,OAAOF,YAGvC,wBAAQR,UAAU,kBAAkBM,KAAK,SAAzC,qC,QC5CGK,EAAS,SACTC,EAAO,OACPC,EAAS,SACTC,EAAW,WACXC,EAAQ,iBACRC,EAAQ,gBACRC,EAAkB,0BCiChBC,EAjCC,SAAC,GAA4B,IAA1BC,EAAyB,EAAzBA,QAASC,EAAgB,EAAhBA,UACpB3B,EAAWC,cACHI,GAAqBqB,EAA3BvB,KAA2BuB,EAArBrB,OAAcuB,GAAOF,EAAdG,MAAcH,EAAPE,IAC5B,OACE,+BACE,6BACE,sBAAKrB,UAAU,iCAAf,UACE,uBACEuB,QAASH,EACTd,KAAK,WACLN,UAAU,yBAEZ,uBAAOA,UAAU,8BAIrB,6BAAKF,IAEL,qBAAIE,UAAU,UAAd,UACE,cAAC,IAAD,CAAMwB,GAAE,iBAAYH,GAApB,SACE,sBAAMrB,UAAU,sBAAhB,oBAEF,sBACEA,UAAU,8BACVyB,QAAS,kBAAMhC,EDdD,SAAC4B,GACrB,MAAM,CACHf,KAAK,SACLoB,QAAQL,GCWmBM,CAAWN,KAFrC,kCCROO,EAXH,WACR,OACI,qCAGI,cAAC,EAAD,IACA,cAAC,EAAD,Q,+BCXNC,EAAc,CAClBC,SAAU,CACR,CACET,GAAI,EACJzB,KAAM,SACNmC,MAAO,cAET,CACEV,GAAI,EACJzB,KAAM,OACNmC,MAAO,eAKXZ,QAAS,KACTa,iBAAkB,IAGPC,EAAiB,WAAkC,IAAjCC,EAAgC,uDAAxBL,EAAaM,EAAW,uCAC7D,OAAQA,EAAO7B,MACb,KAAKK,EACH,OAAO,2BACFuB,GADL,IAEEJ,SAAS,CAAEK,EAAOT,SAAV,mBAAsBQ,EAAMJ,aAExC,KAAKlB,EACH,OAAO,2BACFsB,GADL,IAEEJ,SAAUI,EAAMJ,SAASM,KACzB,SAACjB,GAAD,OACAA,EAAQE,IAAMc,EAAOT,QAAQL,GAAKc,EAAOT,QAAUP,OAGvD,KAAKN,EACH,OAAO,2BACFqB,GADL,IAEEJ,SAAUI,EAAMJ,SAASO,QACvB,SAAClB,GAAD,OAAaA,EAAQE,KAAOc,EAAOT,aAGvC,KAAKV,EACH,OAAO,2BACFkB,GADL,IAEEF,iBAAkB,KAGtB,KAAKlB,EACL,IAAIwB,EAAMJ,EAAMJ,SAASO,QACvB,SAAClB,GAAD,OAAaA,EAAQE,IAAMc,EAAOT,WAEpCY,EAAMA,EAAIC,SAJV,oBAKgBD,GALhB,IAKA,2BAAqB,CAAC,IAAbE,EAAY,QACnBF,EAAME,GANR,8BAQA,OAAO,2BACFN,GADL,IAEEf,QAASmB,IAEf,KAAKrB,EACD,OAAO,2BACFiB,GADL,IAEEJ,SAAU,KAEd,KAAKf,EACH,OAAO,2BACFmB,GADL,IAEEF,iBAAkBG,EAAOT,UAE3B,QACA,OAAOQ,IC/DTO,GDiGaC,YACb,CAAExB,QAAQe,IClGJU,YAAYV,IACtBW,IAASC,OACL,cAAC,IAAD,CAAUJ,MAAOA,EAAjB,SAAwB,cAAC,EAAD,MAE3BK,SAASC,eAAe,W","file":"static/js/main.7533f8a2.chunk.js","sourcesContent":["import React, { useState } from \"react\";\nimport { useDispatch } from \"react-redux\";\nimport { useHistory } from \"react-router-dom\";\n\nconst AddContact = () => {\n  let history = useHistory();\n  const dispatch = useDispatch();\n  const [name, setName] = useState(\"\");\n  const [phone, setPhone] = useState(\"\");\n\n  const createContact = (e) => {\n    e.preventDefault();\n    const new_contact = {\n      name: name,\n      phone: phone,\n\n    };\n    dispatch(AddContact(new_contact));\n    history.push(\"/\");\n  };\n\n  return (\n    <div className=\"card border-0 shadow\">\n      <div className=\"card-header\">Add a Contact</div>\n      <div className=\"card-body\">\n        <form onSubmit={(e) => createContact(e)}>\n          <div className=\"form-group\">\n            <input\n              type=\"text\"\n              className=\"form-control\"\n              placeholder=\"Enter Your Name\"\n              value={name}\n              onChange={(e) => setName(e.target.value)}\n            />\n          </div>\n          <div className=\"form-group\">\n            <input\n              type=\"text\"\n              className=\"form-control\"\n              placeholder=\"Enter Your Phone Number\"\n              value={phone}\n              onChange={(e) => setPhone(e.target.value)}\n            />\n          </div>\n          <button className=\"btn btn-primary\" type=\"submit\">\n            Create Contact\n          </button>\n        </form>\n      </div>\n    </div>\n  );\n};\n\nexport default AddContact;\n","export const CREATE = \"CREATE\";\r\nexport const EDIT = \"EDIT\";\r\nexport const DELETE = \"DELETE\";\r\nexport const CONTACTS = \"CONTACTS\";\r\nexport const SELECT= \"SELECT_CONTACT\";\r\nexport const CLEAR = \"CLEAR_CONTACT\";\r\nexport const DELETE_SELECTED = \"DELETE_SELECTED_CONTACT\";\r\n\r\n\r\n\r\nexport const addUser=(contact)=>{\r\n    return{\r\n      type:\"CREATE\",\r\n      payload:contact\r\n    }\r\n}\r\nexport const deleteUser=(id)=>{\r\n    return{\r\n       type:\"DELETE\",\r\n       payload:id\r\n    }\r\n}\r\nexport const editUserDetails=(contact)=>{\r\n  return{\r\n    type:\"EDIT\",\r\n    payload:contact\r\n  }\r\n}\r\nexport const contacts=(id)=>{\r\n    return{\r\n      type:\"CONTACTS\",\r\n      payload:id\r\n    }\r\n  }\r\n\r\n  // select all contact\r\nexport const selectAllContact = (id) => ({\r\n  type: SELECT,\r\n  payload: id,\r\n});\r\n\r\n// clear selected contacts\r\nexport const clearAllContact = () => ({\r\n  type: CLEAR,\r\n});\r\n\r\n// delete selected contacts\r\nexport const deleteAllContact = () => ({\r\n  type: DELETE_SELECTED,\r\n});","import React, { useState } from \"react\";\n//import Avatar from \"react-avatar\";\nimport { Link } from \"react-router-dom\";\nimport { deleteUser } from \"../Action/index\";\nimport { useDispatch } from \"react-redux\";\n\nconst Contact = ({ contact, selectAll }) => {\n  const dispatch = useDispatch();\n  const { name, phone, email, id } = contact;\n  return (\n    <tr>\n      <td>\n        <div className=\"custom-control custom-checkbox\">\n          <input\n            checked={selectAll}\n            type=\"checkbox\"\n            className=\"custom-control-input\"\n          />\n          <label className=\"custom-control-label\"></label>\n        </div>\n      </td>\n      \n      <td>{phone}</td>\n      \n      <td className=\"actions\">\n        <Link to={`./edit/${id}`}>\n          <span className=\"material-icons mr-2\">edit</span>\n        </Link>\n        <span\n          className=\"material-icons  text-danger\"\n          onClick={() => dispatch(deleteUser(id))}\n        >\n          remove_circle\n        </span>\n      </td>\n    </tr>\n  );\n};\n\nexport default Contact;\n","import React from 'react';\r\n//import Header from './Components/Header/Header'\r\n//import Login from './Components/LoginSignUp/Login'\r\n//import SignUp from './Components/LoginSignUp/SignUp'\r\nimport AddContact from './Components/AddContact';\r\nimport Contact from './Components/Contact';\r\n//import Contacts from './Components/Contacts';\r\n//import EditContact from './Components/EditContact';\r\n\r\nconst App = () => {\r\n    return (\r\n        <div>\r\n            \r\n            hi\r\n            <AddContact/>\r\n            <Contact/>\r\n        </div>\r\n    );\r\n};\r\n\r\nexport default App;","/*import {combineReducers} from 'redux';\r\nimport Actions from '../Action';*/\r\nimport {CREATE,DELETE,EDIT,CONTACTS,DELETE_SELECTED,SELECT,CLEAR} from \"../Action/index\";\r\nimport {combineReducers} from 'redux';\r\nconst intialState = {\r\n  contacts: [\r\n    {\r\n      id: 1,\r\n      name: \"Hariii\",\r\n      Phone: \"7010041125\",\r\n    },\r\n    {\r\n      id: 2,\r\n      name: \"Anna\",\r\n      Phone: \"9940866311\",\r\n      \r\n    },\r\n    \r\n  ],\r\n  contact: null,\r\n  selectedContacts: [],\r\n};\r\n\r\nexport const contactReducer = (state = intialState, action) => {\r\n  switch (action.type) {\r\n    case CREATE:\r\n      return {\r\n        ...state,\r\n        contacts: [action.payload, ...state.contacts],\r\n      };\r\n    case EDIT:\r\n      return {\r\n        ...state,\r\n        contacts: state.contacts.map(\r\n        (contact) =>\r\n        contact.id == action.payload.id ? action.payload : contact\r\n        ),\r\n      };\r\n    case DELETE:\r\n      return {\r\n        ...state,\r\n        contacts: state.contacts.filter(\r\n          (contact) => contact.id !== action.payload\r\n        ),\r\n      };\r\n      case CLEAR:\r\n        return {\r\n          ...state,\r\n          selectedContacts: [],\r\n        };\r\n  \r\n      case CONTACTS:\r\n      let arr = state.contacts.filter(\r\n        (contact) => contact.id == action.payload\r\n      );\r\n      arr = arr.values();\r\n      for (let val of arr) {\r\n        arr = val;\r\n      }\r\n      return {\r\n        ...state,\r\n        contact: arr,\r\n      };\r\n  case DELETE_SELECTED:\r\n      return {\r\n        ...state,\r\n        contacts: [],\r\n      };\r\n    case SELECT:\r\n      return {\r\n        ...state,\r\n        selectedContacts: action.payload,\r\n      };\r\n      default:\r\n      return state;\r\n  }\r\n}\r\n   \r\n\r\n   \r\n\r\n\r\n\r\n\r\n    \r\n/*const reducer = (state=intialState, action) => {\r\n    if (action.type === \"CREATE\") {\r\n      return  [\r\n        ...state,\r\n        Object.assign({}, action.contact)\r\n      ];\r\n    } else if (action.type === \"DELETE\") {\r\n      return [\r\n        ...state,\r\n        Object.delete({}, action.contact)\r\n      ];\r\n    }\r\n    else if (action.type===\"EDIT\"){\r\n      return [\r\n        ...state,\r\n        Object.edit({}, action.contact)\r\n      ];;\r\n    }\r\n    \r\n    else {\r\n      return state;\r\n    }\r\n  };*/\r\n  export default combineReducers(\r\n    { Contact:contactReducer} \r\n      )\r\n","import React from \"react\";\r\nimport ReactDOM from \"react-dom\";\r\nimport App from './App';\r\nimport { contactReducer } from './Reducers/index';\r\n\r\nimport { Provider } from \"react-redux\";\r\nimport {createStore} from 'redux';\r\n\r\n\r\n\r\n\r\nlet store=createStore(contactReducer)\r\nReactDOM.render(\r\n    <Provider store={store}><App/></Provider>\r\n\r\n,document.getElementById('root'))"],"sourceRoot":""}